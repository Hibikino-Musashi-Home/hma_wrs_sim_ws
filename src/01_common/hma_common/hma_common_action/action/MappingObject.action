# Copyright (c) 2022 Hibikino-Musashi@Home
# All rights reserved.

# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:

#  * Redistributions of source code must retain the above copyright notice,
#  this list of conditions and the following disclaimer.
#  * Redistributions in binary form must reproduce the above copyright
#  notice, this list of conditions and the following disclaimer in the
#  documentation and/or other materials provided with the distribution.
#  * Neither the name of Hibikino-Musashi@Home nor the names of its
#  contributors may be used to endorse or promote products derived from
#  this software without specific prior written permission.

# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

uint8 action # Select the action to be executed.
             # 0: Add objects.
             # 1: Run the mapping and save the data.
             # 2: Delete specific object from the mapping data.
             # 3: Delete all objects from the mapping data.
             # 4: Check for the existence of an object in the mapping data, and if it exists, compare the scores and return the higher one.
             # 5: Get a specific object from the mapping data.
             # 6: Get all objects from the mapping data.
             # 7: Get nearest object from the mapping data.
string[] id # Object ID. 
            # Required for 0, 4.
string[] name # Object name. 
              # Required for 0.
geometry_msgs/Pose[] pose # 3D coordinates of a specific object. 
                          # Required for 0, 2, 4, 7.
float32[] score # Recognition score of a comparison objects. 
                # Required for 0, 4.
string search_place # Limit the search area.
                    # Optional for 0, 2, 4, 7.
---
bool result # Whether the action was successful or not.
uint8 amount # Number of mapped objects.
string[] id # Object ID of mapped objects.
string[] place # Place information of mapped objects.
geometry_msgs/Pose[] pose # Pose of mapped objects.
float32[] score # Score of mapped objects.
---
bool feedback
